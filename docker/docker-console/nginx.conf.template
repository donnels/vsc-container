user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    server {
        listen 80;
        server_name console.${CERT_DOMAIN} console-lcars.${CERT_DOMAIN};
        
        root /var/www/html;
        index index.html index.htm;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; font-src 'self' https: data:; img-src 'self' https: data:;" always;

        # Main location
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API endpoint for system status (if needed for LCARS functionality)
        location /api/ {
            add_header Content-Type application/json;
            return 200 '{"status":"online","service":"lcars-console","timestamp":"$time_iso8601"}';
        }

        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }

    server {
        listen 443 ssl http2;
        server_name console.${CERT_DOMAIN} console-lcars.${CERT_DOMAIN};
        
        # SSL certificate paths (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/console.${CERT_DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/console.${CERT_DOMAIN}/privkey.pem;
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        
        root /var/www/html;
        index index.html index.htm;

        # Security headers (enhanced for HTTPS)
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; font-src 'self' https: data:; img-src 'self' https: data:;" always;

        # Main location
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API endpoint for system status
        location /api/ {
            add_header Content-Type application/json;
            return 200 '{"status":"online","service":"lcars-console","timestamp":"$time_iso8601","secure":true}';
        }

        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }
}
