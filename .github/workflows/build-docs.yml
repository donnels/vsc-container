name: Build Documentation and Diagrams

on:
  push:
    branches: [ main, develop ]
    paths: 
      - '**.asciidoc'
      - '**.plantuml'
      - 'images/**'
      - 'docs/**'
      - '.github/workflows/build-docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.asciidoc'
      - '**.plantuml'
      - 'images/**'
      - 'docs/**'
      - '.github/workflows/build-docs.yml'

permissions:
  contents: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Java for PlantUML
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install AsciiDoctor and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y asciidoctor graphviz
        sudo gem install asciidoctor-pdf
        wget -O plantuml.jar https://github.com/plantuml/plantuml/releases/download/v1.2024.0/plantuml-1.2024.0.jar
        sudo cp plantuml.jar /usr/local/bin/
        
        # Verify PlantUML installation
        echo "=== PlantUML Installation Verification ==="
        ls -la /usr/local/bin/plantuml.jar
        java -jar /usr/local/bin/plantuml.jar -version
        echo "=== End Verification ==="
    
    - name: Ensure docs directory exists
      run: mkdir -p docs
    
    - name: Build PlantUML files to PNG
      run: |
        echo "=== PlantUML Processing Debug ==="
        echo "Found PlantUML files:"
        find . -name "*.plantuml" -type f
        echo ""
        
        find . -name "*.plantuml" -type f | while read file; do
          echo "Processing: $file"
          dir=$(dirname "$file")
          filename=$(basename "$file" .plantuml)
          echo "  Directory: $dir"
          echo "  Filename: $filename"
          
          # Generate PNG - try different approaches
          echo "  Running PlantUML..."
          java -jar /usr/local/bin/plantuml.jar -tpng -v "$file"
          
          echo "  Checking for generated files in various locations:"
          echo "    Current dir: $(pwd)"
          find "$dir" -name "${filename}*.png" -type f 2>/dev/null || echo "    No PNG files found in $dir"
          find . -name "${filename}*.png" -type f 2>/dev/null || echo "    No PNG files found anywhere"
          
          # Check if PlantUML created nested directories
          nested_png="$dir/$dir/$filename.png"
          direct_png="$dir/$filename.png"
          
          echo "    Checking nested: $nested_png"
          if [ -f "$nested_png" ]; then
            echo "    Found nested PNG, moving to: $direct_png"
            mv "$nested_png" "$direct_png"
            rmdir "$dir/$dir" 2>/dev/null || true
          elif [ -f "$direct_png" ]; then
            echo "    PNG already in correct location: $direct_png"
          else
            echo "    ERROR: No PNG generated for $file"
            ls -la "$dir/" || echo "    Cannot list directory $dir"
          fi
          echo ""
        done
        
        echo "=== Final PNG file listing ==="
        find . -name "*.png" -type f
    
    - name: Build AsciiDoc files to HTML
      run: |
        find . -name "*.asciidoc" -not -path "./docs/*" | while read file; do
          echo "Processing $file to HTML"
          filename=$(basename "$file" .asciidoc)
          asciidoctor "$file" -o "docs/${filename}.html"
        done
    
    - name: Build AsciiDoc files to PDF
      run: |
        find . -name "*.asciidoc" -not -path "./docs/*" | while read file; do
          echo "Processing $file to PDF"
          filename=$(basename "$file" .asciidoc)
          asciidoctor-pdf "$file" -o "docs/${filename}.pdf"
        done
    
    - name: List generated files
      run: |
        echo "Generated HTML files:"
        ls -la docs/*.html 2>/dev/null || echo "No HTML files found"
        echo "Generated PDF files:"
        ls -la docs/*.pdf 2>/dev/null || echo "No PDF files found"  
        echo "Generated PNG files:"
        find . -name "*.png" -type f 2>/dev/null || echo "No PNG files found"
    
    - name: Commit and push generated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        # Add generated documentation files
        git add docs/
        # Add PNG files if they exist
        if find . -name "*.png" -type f | grep -q .; then
          find . -name "*.png" -type f -exec git add {} \;
        fi
        # Check if there are any changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-generated documentation and diagrams [skip ci]"
          git push
        fi
